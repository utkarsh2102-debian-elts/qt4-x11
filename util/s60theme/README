's60theme' is a commandline tool which converts Carbide.ui themes into
an intermediate binary format that can be read by the simulated
QS60Style. So, for example Designer (standalone or in Carbide) will
be able to display a realistic S60 Ui.

The intermediate binary format consists of hashes of QPictures and
QColors, streamed to a QByteArray and compressed. QS60Style could not load
the Carbide.ui theme directly because SVG handling is unfortunately
not part of QtGui, and would require a dependency on the QtSvg module.

Also, 's60theme' uses QWebkit to parse the SVG graphics (inspired by
Ariya's 'WebKit-based SVG rasterizer' labs post). QtSvg had some issues
with the SVGs that come with Carbide.ui.

Usage examples:
> s60theme "com.nokia.tools.theme.s60.50_3.4.0.0\config\model" Default.blob
  (Reads the default 's60.50' theme and saves it as 'Default.blob')

> s60theme "Eclipse\Examples\Haze\Haze.tdf" Haze.blob
  (Reads the Haze theme and saves it as 'Haze.blob')

To use the blob in a Qt application, get an instance of a QS60Style and call
  style->loadS60ThemeFromBlob("Theme.blob");

The simulated QS60Style will, in its constructor by default, try to load a
":/s60Stylethemes/Default.blob". If your application has that a resource with
exactly that filename, it will be used by default.
'Default.blob' is not included in the current Qt source package. But it can
easily be created with 's60theme' and a fresh install of Carbide.ui

Visit http://www.forum.nokia.com for details about Carbide.ui
